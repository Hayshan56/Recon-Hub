import jsPDF from 'jspdf';
import 'jspdf-autotable';

interface ScanResult {
  subdomain: string;
  status: number;
  statusText: string;
}

export const generatePDFReport = (domain: string, results: ScanResult[]) => {
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.width;
  const pageHeight = pdf.internal.pageSize.height;

  // Add watermark
  const addWatermark = () => {
    pdf.setGState(pdf.GState({ opacity: 0.1 }));
    pdf.setTextColor(99, 102, 241); // primary color
    pdf.setFontSize(60);
    pdf.text('ReconHub', pageWidth / 2, pageHeight / 2, {
      angle: 45,
      align: 'center'
    });
    pdf.setGState(pdf.GState({ opacity: 1 }));
  };

  // Header with logo placeholder (using text for now)
  const addHeader = () => {
    pdf.setTextColor(99, 102, 241); // primary color
    pdf.setFontSize(24);
    pdf.setFont(undefined, 'bold');
    pdf.text('ReconHub', 20, 30);
    
    pdf.setTextColor(0, 0, 0);
    pdf.setFontSize(18);
    pdf.text('Subdomain Reconnaissance Report', 20, 50);
    
    // Line separator
    pdf.setDrawColor(229, 231, 235); // border color
    pdf.line(20, 60, pageWidth - 20, 60);
  };

  // Add watermark and header
  addWatermark();
  addHeader();

  // Report details
  pdf.setFontSize(12);
  pdf.setFont(undefined, 'normal');
  pdf.setTextColor(0, 0, 0);
  
  const currentDate = new Date().toLocaleString();
  pdf.text(`Domain: ${domain}`, 20, 80);
  pdf.text(`Scan Date: ${currentDate}`, 20, 95);
  pdf.text(`Total Subdomains Found: ${results.length}`, 20, 110);

  // Results table
  const tableData = results.map(result => [
    result.subdomain,
    result.status.toString(),
    result.statusText
  ]);

  (pdf as any).autoTable({
    head: [['Subdomain', 'Status Code', 'Status Text']],
    body: tableData,
    startY: 130,
    theme: 'grid',
    headStyles: {
      fillColor: [99, 102, 241], // primary color
      textColor: [255, 255, 255],
      fontStyle: 'bold'
    },
    alternateRowStyles: {
      fillColor: [248, 250, 252] // muted background
    },
    margin: { left: 20, right: 20 },
    styles: {
      fontSize: 10,
      cellPadding: 8
    },
    columnStyles: {
      0: { cellWidth: 80 },
      1: { cellWidth: 30, halign: 'center' },
      2: { cellWidth: 70 }
    }
  });

  // Footer
  const finalY = (pdf as any).lastAutoTable.finalY + 20;
  pdf.setFontSize(10);
  pdf.setTextColor(107, 114, 128); // muted text color
  pdf.text('Generated by ReconHub - Open Source Reconnaissance Platform', 20, finalY);
  pdf.text('https://reconhub.dev', 20, finalY + 15);

  // Download the PDF
  pdf.save(`${domain}-reconnaissance-report.pdf`);
};